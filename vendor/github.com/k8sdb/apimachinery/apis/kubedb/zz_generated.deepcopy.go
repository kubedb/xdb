// +build !ignore_autogenerated

/*
Copyright 2017 The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package kubedb

import (
	reflect "reflect"

	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/client-go/pkg/api/v1"
)

func init() {
	SchemeBuilder.Register(RegisterDeepCopies)
}

// RegisterDeepCopies adds deep-copy functions to the given scheme. Public
// to allow building arbitrary schemes.
func RegisterDeepCopies(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedDeepCopyFuncs(
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_AzureSpec, InType: reflect.TypeOf(&AzureSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_BackupScheduleSpec, InType: reflect.TypeOf(&BackupScheduleSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_DormantDatabase, InType: reflect.TypeOf(&DormantDatabase{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_DormantDatabaseList, InType: reflect.TypeOf(&DormantDatabaseList{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_DormantDatabaseSpec, InType: reflect.TypeOf(&DormantDatabaseSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_DormantDatabaseStatus, InType: reflect.TypeOf(&DormantDatabaseStatus{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_Elasticsearch, InType: reflect.TypeOf(&Elasticsearch{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_ElasticsearchList, InType: reflect.TypeOf(&ElasticsearchList{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_ElasticsearchSpec, InType: reflect.TypeOf(&ElasticsearchSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_ElasticsearchStatus, InType: reflect.TypeOf(&ElasticsearchStatus{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_ElasticsearchSummary, InType: reflect.TypeOf(&ElasticsearchSummary{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_GCSSpec, InType: reflect.TypeOf(&GCSSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_InitSpec, InType: reflect.TypeOf(&InitSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_LocalSpec, InType: reflect.TypeOf(&LocalSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_MonitorSpec, InType: reflect.TypeOf(&MonitorSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_Origin, InType: reflect.TypeOf(&Origin{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_OriginSpec, InType: reflect.TypeOf(&OriginSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_Postgres, InType: reflect.TypeOf(&Postgres{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_PostgresList, InType: reflect.TypeOf(&PostgresList{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_PostgresSchemaInfo, InType: reflect.TypeOf(&PostgresSchemaInfo{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_PostgresSpec, InType: reflect.TypeOf(&PostgresSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_PostgresStatus, InType: reflect.TypeOf(&PostgresStatus{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_PostgresSummary, InType: reflect.TypeOf(&PostgresSummary{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_PostgresTableInfo, InType: reflect.TypeOf(&PostgresTableInfo{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_PrometheusSpec, InType: reflect.TypeOf(&PrometheusSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_Report, InType: reflect.TypeOf(&Report{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_ReportStatus, InType: reflect.TypeOf(&ReportStatus{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_ReportSummary, InType: reflect.TypeOf(&ReportSummary{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_S3Spec, InType: reflect.TypeOf(&S3Spec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_ScriptSourceSpec, InType: reflect.TypeOf(&ScriptSourceSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_Snapshot, InType: reflect.TypeOf(&Snapshot{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_SnapshotList, InType: reflect.TypeOf(&SnapshotList{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_SnapshotSourceSpec, InType: reflect.TypeOf(&SnapshotSourceSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_SnapshotSpec, InType: reflect.TypeOf(&SnapshotSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_SnapshotStatus, InType: reflect.TypeOf(&SnapshotStatus{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_SnapshotStorageSpec, InType: reflect.TypeOf(&SnapshotStorageSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_SwiftSpec, InType: reflect.TypeOf(&SwiftSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_Xdb, InType: reflect.TypeOf(&Xdb{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_XdbList, InType: reflect.TypeOf(&XdbList{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_XdbSpec, InType: reflect.TypeOf(&XdbSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_kubedb_XdbStatus, InType: reflect.TypeOf(&XdbStatus{})},
	)
}

// DeepCopy_kubedb_AzureSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_AzureSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*AzureSpec)
		out := out.(*AzureSpec)
		*out = *in
		return nil
	}
}

// DeepCopy_kubedb_BackupScheduleSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_BackupScheduleSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*BackupScheduleSpec)
		out := out.(*BackupScheduleSpec)
		*out = *in
		if err := DeepCopy_kubedb_SnapshotStorageSpec(&in.SnapshotStorageSpec, &out.SnapshotStorageSpec, c); err != nil {
			return err
		}
		if newVal, err := c.DeepCopy(&in.Resources); err != nil {
			return err
		} else {
			out.Resources = *newVal.(*v1.ResourceRequirements)
		}
		return nil
	}
}

// DeepCopy_kubedb_DormantDatabase is an autogenerated deepcopy function.
func DeepCopy_kubedb_DormantDatabase(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*DormantDatabase)
		out := out.(*DormantDatabase)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*meta_v1.ObjectMeta)
		}
		if err := DeepCopy_kubedb_DormantDatabaseSpec(&in.Spec, &out.Spec, c); err != nil {
			return err
		}
		if err := DeepCopy_kubedb_DormantDatabaseStatus(&in.Status, &out.Status, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopy_kubedb_DormantDatabaseList is an autogenerated deepcopy function.
func DeepCopy_kubedb_DormantDatabaseList(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*DormantDatabaseList)
		out := out.(*DormantDatabaseList)
		*out = *in
		if in.Items != nil {
			in, out := &in.Items, &out.Items
			*out = make([]DormantDatabase, len(*in))
			for i := range *in {
				if err := DeepCopy_kubedb_DormantDatabase(&(*in)[i], &(*out)[i], c); err != nil {
					return err
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_DormantDatabaseSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_DormantDatabaseSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*DormantDatabaseSpec)
		out := out.(*DormantDatabaseSpec)
		*out = *in
		if err := DeepCopy_kubedb_Origin(&in.Origin, &out.Origin, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopy_kubedb_DormantDatabaseStatus is an autogenerated deepcopy function.
func DeepCopy_kubedb_DormantDatabaseStatus(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*DormantDatabaseStatus)
		out := out.(*DormantDatabaseStatus)
		*out = *in
		if in.CreationTime != nil {
			in, out := &in.CreationTime, &out.CreationTime
			*out = new(meta_v1.Time)
			**out = (*in).DeepCopy()
		}
		if in.PausingTime != nil {
			in, out := &in.PausingTime, &out.PausingTime
			*out = new(meta_v1.Time)
			**out = (*in).DeepCopy()
		}
		if in.WipeOutTime != nil {
			in, out := &in.WipeOutTime, &out.WipeOutTime
			*out = new(meta_v1.Time)
			**out = (*in).DeepCopy()
		}
		return nil
	}
}

// DeepCopy_kubedb_Elasticsearch is an autogenerated deepcopy function.
func DeepCopy_kubedb_Elasticsearch(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*Elasticsearch)
		out := out.(*Elasticsearch)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*meta_v1.ObjectMeta)
		}
		if err := DeepCopy_kubedb_ElasticsearchSpec(&in.Spec, &out.Spec, c); err != nil {
			return err
		}
		if err := DeepCopy_kubedb_ElasticsearchStatus(&in.Status, &out.Status, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopy_kubedb_ElasticsearchList is an autogenerated deepcopy function.
func DeepCopy_kubedb_ElasticsearchList(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchList)
		out := out.(*ElasticsearchList)
		*out = *in
		if in.Items != nil {
			in, out := &in.Items, &out.Items
			*out = make([]Elasticsearch, len(*in))
			for i := range *in {
				if err := DeepCopy_kubedb_Elasticsearch(&(*in)[i], &(*out)[i], c); err != nil {
					return err
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_ElasticsearchSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_ElasticsearchSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchSpec)
		out := out.(*ElasticsearchSpec)
		*out = *in
		if in.Storage != nil {
			in, out := &in.Storage, &out.Storage
			if newVal, err := c.DeepCopy(*in); err != nil {
				return err
			} else {
				*out = newVal.(*v1.PersistentVolumeClaimSpec)
			}
		}
		if in.NodeSelector != nil {
			in, out := &in.NodeSelector, &out.NodeSelector
			*out = make(map[string]string)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		if in.Init != nil {
			in, out := &in.Init, &out.Init
			*out = new(InitSpec)
			if err := DeepCopy_kubedb_InitSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if in.BackupSchedule != nil {
			in, out := &in.BackupSchedule, &out.BackupSchedule
			*out = new(BackupScheduleSpec)
			if err := DeepCopy_kubedb_BackupScheduleSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if in.Monitor != nil {
			in, out := &in.Monitor, &out.Monitor
			*out = new(MonitorSpec)
			if err := DeepCopy_kubedb_MonitorSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if newVal, err := c.DeepCopy(&in.Resources); err != nil {
			return err
		} else {
			out.Resources = *newVal.(*v1.ResourceRequirements)
		}
		if in.Affinity != nil {
			in, out := &in.Affinity, &out.Affinity
			if newVal, err := c.DeepCopy(*in); err != nil {
				return err
			} else {
				*out = newVal.(*v1.Affinity)
			}
		}
		if in.Tolerations != nil {
			in, out := &in.Tolerations, &out.Tolerations
			*out = make([]v1.Toleration, len(*in))
			for i := range *in {
				if newVal, err := c.DeepCopy(&(*in)[i]); err != nil {
					return err
				} else {
					(*out)[i] = *newVal.(*v1.Toleration)
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_ElasticsearchStatus is an autogenerated deepcopy function.
func DeepCopy_kubedb_ElasticsearchStatus(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchStatus)
		out := out.(*ElasticsearchStatus)
		*out = *in
		if in.CreationTime != nil {
			in, out := &in.CreationTime, &out.CreationTime
			*out = new(meta_v1.Time)
			**out = (*in).DeepCopy()
		}
		return nil
	}
}

// DeepCopy_kubedb_ElasticsearchSummary is an autogenerated deepcopy function.
func DeepCopy_kubedb_ElasticsearchSummary(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchSummary)
		out := out.(*ElasticsearchSummary)
		*out = *in
		if in.IdCount != nil {
			in, out := &in.IdCount, &out.IdCount
			*out = make(map[string]int64)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		// in.Mapping is kind 'Interface'
		if in.Mapping != nil {
			if newVal, err := c.DeepCopy(&in.Mapping); err != nil {
				return err
			} else {
				out.Mapping = *newVal.(*interface{})
			}
		}
		// in.Setting is kind 'Interface'
		if in.Setting != nil {
			if newVal, err := c.DeepCopy(&in.Setting); err != nil {
				return err
			} else {
				out.Setting = *newVal.(*interface{})
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_GCSSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_GCSSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*GCSSpec)
		out := out.(*GCSSpec)
		*out = *in
		return nil
	}
}

// DeepCopy_kubedb_InitSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_InitSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*InitSpec)
		out := out.(*InitSpec)
		*out = *in
		if in.ScriptSource != nil {
			in, out := &in.ScriptSource, &out.ScriptSource
			*out = new(ScriptSourceSpec)
			if err := DeepCopy_kubedb_ScriptSourceSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if in.SnapshotSource != nil {
			in, out := &in.SnapshotSource, &out.SnapshotSource
			*out = new(SnapshotSourceSpec)
			**out = **in
		}
		return nil
	}
}

// DeepCopy_kubedb_LocalSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_LocalSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*LocalSpec)
		out := out.(*LocalSpec)
		*out = *in
		if newVal, err := c.DeepCopy(&in.VolumeSource); err != nil {
			return err
		} else {
			out.VolumeSource = *newVal.(*v1.VolumeSource)
		}
		return nil
	}
}

// DeepCopy_kubedb_MonitorSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_MonitorSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*MonitorSpec)
		out := out.(*MonitorSpec)
		*out = *in
		if in.Prometheus != nil {
			in, out := &in.Prometheus, &out.Prometheus
			*out = new(PrometheusSpec)
			if err := DeepCopy_kubedb_PrometheusSpec(*in, *out, c); err != nil {
				return err
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_Origin is an autogenerated deepcopy function.
func DeepCopy_kubedb_Origin(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*Origin)
		out := out.(*Origin)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*meta_v1.ObjectMeta)
		}
		if err := DeepCopy_kubedb_OriginSpec(&in.Spec, &out.Spec, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopy_kubedb_OriginSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_OriginSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*OriginSpec)
		out := out.(*OriginSpec)
		*out = *in
		if in.Elasticsearch != nil {
			in, out := &in.Elasticsearch, &out.Elasticsearch
			*out = new(ElasticsearchSpec)
			if err := DeepCopy_kubedb_ElasticsearchSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if in.Postgres != nil {
			in, out := &in.Postgres, &out.Postgres
			*out = new(PostgresSpec)
			if err := DeepCopy_kubedb_PostgresSpec(*in, *out, c); err != nil {
				return err
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_Postgres is an autogenerated deepcopy function.
func DeepCopy_kubedb_Postgres(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*Postgres)
		out := out.(*Postgres)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*meta_v1.ObjectMeta)
		}
		if err := DeepCopy_kubedb_PostgresSpec(&in.Spec, &out.Spec, c); err != nil {
			return err
		}
		if err := DeepCopy_kubedb_PostgresStatus(&in.Status, &out.Status, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopy_kubedb_PostgresList is an autogenerated deepcopy function.
func DeepCopy_kubedb_PostgresList(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*PostgresList)
		out := out.(*PostgresList)
		*out = *in
		if in.Items != nil {
			in, out := &in.Items, &out.Items
			*out = make([]Postgres, len(*in))
			for i := range *in {
				if err := DeepCopy_kubedb_Postgres(&(*in)[i], &(*out)[i], c); err != nil {
					return err
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_PostgresSchemaInfo is an autogenerated deepcopy function.
func DeepCopy_kubedb_PostgresSchemaInfo(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*PostgresSchemaInfo)
		out := out.(*PostgresSchemaInfo)
		*out = *in
		if in.Table != nil {
			in, out := &in.Table, &out.Table
			*out = make(map[string]*PostgresTableInfo)
			for key, val := range *in {
				if newVal, err := c.DeepCopy(&val); err != nil {
					return err
				} else {
					(*out)[key] = *newVal.(**PostgresTableInfo)
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_PostgresSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_PostgresSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*PostgresSpec)
		out := out.(*PostgresSpec)
		*out = *in
		if in.Storage != nil {
			in, out := &in.Storage, &out.Storage
			if newVal, err := c.DeepCopy(*in); err != nil {
				return err
			} else {
				*out = newVal.(*v1.PersistentVolumeClaimSpec)
			}
		}
		if in.DatabaseSecret != nil {
			in, out := &in.DatabaseSecret, &out.DatabaseSecret
			if newVal, err := c.DeepCopy(*in); err != nil {
				return err
			} else {
				*out = newVal.(*v1.SecretVolumeSource)
			}
		}
		if in.NodeSelector != nil {
			in, out := &in.NodeSelector, &out.NodeSelector
			*out = make(map[string]string)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		if in.Init != nil {
			in, out := &in.Init, &out.Init
			*out = new(InitSpec)
			if err := DeepCopy_kubedb_InitSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if in.BackupSchedule != nil {
			in, out := &in.BackupSchedule, &out.BackupSchedule
			*out = new(BackupScheduleSpec)
			if err := DeepCopy_kubedb_BackupScheduleSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if in.Monitor != nil {
			in, out := &in.Monitor, &out.Monitor
			*out = new(MonitorSpec)
			if err := DeepCopy_kubedb_MonitorSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if newVal, err := c.DeepCopy(&in.Resources); err != nil {
			return err
		} else {
			out.Resources = *newVal.(*v1.ResourceRequirements)
		}
		if in.Affinity != nil {
			in, out := &in.Affinity, &out.Affinity
			if newVal, err := c.DeepCopy(*in); err != nil {
				return err
			} else {
				*out = newVal.(*v1.Affinity)
			}
		}
		if in.Tolerations != nil {
			in, out := &in.Tolerations, &out.Tolerations
			*out = make([]v1.Toleration, len(*in))
			for i := range *in {
				if newVal, err := c.DeepCopy(&(*in)[i]); err != nil {
					return err
				} else {
					(*out)[i] = *newVal.(*v1.Toleration)
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_PostgresStatus is an autogenerated deepcopy function.
func DeepCopy_kubedb_PostgresStatus(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*PostgresStatus)
		out := out.(*PostgresStatus)
		*out = *in
		if in.CreationTime != nil {
			in, out := &in.CreationTime, &out.CreationTime
			*out = new(meta_v1.Time)
			**out = (*in).DeepCopy()
		}
		return nil
	}
}

// DeepCopy_kubedb_PostgresSummary is an autogenerated deepcopy function.
func DeepCopy_kubedb_PostgresSummary(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*PostgresSummary)
		out := out.(*PostgresSummary)
		*out = *in
		if in.Schema != nil {
			in, out := &in.Schema, &out.Schema
			*out = make(map[string]*PostgresSchemaInfo)
			for key, val := range *in {
				if newVal, err := c.DeepCopy(&val); err != nil {
					return err
				} else {
					(*out)[key] = *newVal.(**PostgresSchemaInfo)
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_PostgresTableInfo is an autogenerated deepcopy function.
func DeepCopy_kubedb_PostgresTableInfo(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*PostgresTableInfo)
		out := out.(*PostgresTableInfo)
		*out = *in
		return nil
	}
}

// DeepCopy_kubedb_PrometheusSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_PrometheusSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*PrometheusSpec)
		out := out.(*PrometheusSpec)
		*out = *in
		if in.Labels != nil {
			in, out := &in.Labels, &out.Labels
			*out = make(map[string]string)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_Report is an autogenerated deepcopy function.
func DeepCopy_kubedb_Report(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*Report)
		out := out.(*Report)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*meta_v1.ObjectMeta)
		}
		if err := DeepCopy_kubedb_ReportSummary(&in.Summary, &out.Summary, c); err != nil {
			return err
		}
		if err := DeepCopy_kubedb_ReportStatus(&in.Status, &out.Status, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopy_kubedb_ReportStatus is an autogenerated deepcopy function.
func DeepCopy_kubedb_ReportStatus(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ReportStatus)
		out := out.(*ReportStatus)
		*out = *in
		if in.StartTime != nil {
			in, out := &in.StartTime, &out.StartTime
			*out = new(meta_v1.Time)
			**out = (*in).DeepCopy()
		}
		if in.CompletionTime != nil {
			in, out := &in.CompletionTime, &out.CompletionTime
			*out = new(meta_v1.Time)
			**out = (*in).DeepCopy()
		}
		return nil
	}
}

// DeepCopy_kubedb_ReportSummary is an autogenerated deepcopy function.
func DeepCopy_kubedb_ReportSummary(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ReportSummary)
		out := out.(*ReportSummary)
		*out = *in
		if in.Postgres != nil {
			in, out := &in.Postgres, &out.Postgres
			*out = make(map[string]*PostgresSummary)
			for key, val := range *in {
				if newVal, err := c.DeepCopy(&val); err != nil {
					return err
				} else {
					(*out)[key] = *newVal.(**PostgresSummary)
				}
			}
		}
		if in.Elasticsearch != nil {
			in, out := &in.Elasticsearch, &out.Elasticsearch
			*out = make(map[string]*ElasticsearchSummary)
			for key, val := range *in {
				if newVal, err := c.DeepCopy(&val); err != nil {
					return err
				} else {
					(*out)[key] = *newVal.(**ElasticsearchSummary)
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_S3Spec is an autogenerated deepcopy function.
func DeepCopy_kubedb_S3Spec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*S3Spec)
		out := out.(*S3Spec)
		*out = *in
		return nil
	}
}

// DeepCopy_kubedb_ScriptSourceSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_ScriptSourceSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ScriptSourceSpec)
		out := out.(*ScriptSourceSpec)
		*out = *in
		if newVal, err := c.DeepCopy(&in.VolumeSource); err != nil {
			return err
		} else {
			out.VolumeSource = *newVal.(*v1.VolumeSource)
		}
		return nil
	}
}

// DeepCopy_kubedb_Snapshot is an autogenerated deepcopy function.
func DeepCopy_kubedb_Snapshot(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*Snapshot)
		out := out.(*Snapshot)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*meta_v1.ObjectMeta)
		}
		if err := DeepCopy_kubedb_SnapshotSpec(&in.Spec, &out.Spec, c); err != nil {
			return err
		}
		if err := DeepCopy_kubedb_SnapshotStatus(&in.Status, &out.Status, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopy_kubedb_SnapshotList is an autogenerated deepcopy function.
func DeepCopy_kubedb_SnapshotList(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*SnapshotList)
		out := out.(*SnapshotList)
		*out = *in
		if in.Items != nil {
			in, out := &in.Items, &out.Items
			*out = make([]Snapshot, len(*in))
			for i := range *in {
				if err := DeepCopy_kubedb_Snapshot(&(*in)[i], &(*out)[i], c); err != nil {
					return err
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_SnapshotSourceSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_SnapshotSourceSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*SnapshotSourceSpec)
		out := out.(*SnapshotSourceSpec)
		*out = *in
		return nil
	}
}

// DeepCopy_kubedb_SnapshotSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_SnapshotSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*SnapshotSpec)
		out := out.(*SnapshotSpec)
		*out = *in
		if err := DeepCopy_kubedb_SnapshotStorageSpec(&in.SnapshotStorageSpec, &out.SnapshotStorageSpec, c); err != nil {
			return err
		}
		if newVal, err := c.DeepCopy(&in.Resources); err != nil {
			return err
		} else {
			out.Resources = *newVal.(*v1.ResourceRequirements)
		}
		return nil
	}
}

// DeepCopy_kubedb_SnapshotStatus is an autogenerated deepcopy function.
func DeepCopy_kubedb_SnapshotStatus(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*SnapshotStatus)
		out := out.(*SnapshotStatus)
		*out = *in
		if in.StartTime != nil {
			in, out := &in.StartTime, &out.StartTime
			*out = new(meta_v1.Time)
			**out = (*in).DeepCopy()
		}
		if in.CompletionTime != nil {
			in, out := &in.CompletionTime, &out.CompletionTime
			*out = new(meta_v1.Time)
			**out = (*in).DeepCopy()
		}
		return nil
	}
}

// DeepCopy_kubedb_SnapshotStorageSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_SnapshotStorageSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*SnapshotStorageSpec)
		out := out.(*SnapshotStorageSpec)
		*out = *in
		if in.Local != nil {
			in, out := &in.Local, &out.Local
			*out = new(LocalSpec)
			if err := DeepCopy_kubedb_LocalSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if in.S3 != nil {
			in, out := &in.S3, &out.S3
			*out = new(S3Spec)
			**out = **in
		}
		if in.GCS != nil {
			in, out := &in.GCS, &out.GCS
			*out = new(GCSSpec)
			**out = **in
		}
		if in.Azure != nil {
			in, out := &in.Azure, &out.Azure
			*out = new(AzureSpec)
			**out = **in
		}
		if in.Swift != nil {
			in, out := &in.Swift, &out.Swift
			*out = new(SwiftSpec)
			**out = **in
		}
		return nil
	}
}

// DeepCopy_kubedb_SwiftSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_SwiftSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*SwiftSpec)
		out := out.(*SwiftSpec)
		*out = *in
		return nil
	}
}

// DeepCopy_kubedb_Xdb is an autogenerated deepcopy function.
func DeepCopy_kubedb_Xdb(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*Xdb)
		out := out.(*Xdb)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*meta_v1.ObjectMeta)
		}
		if err := DeepCopy_kubedb_XdbSpec(&in.Spec, &out.Spec, c); err != nil {
			return err
		}
		if err := DeepCopy_kubedb_XdbStatus(&in.Status, &out.Status, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopy_kubedb_XdbList is an autogenerated deepcopy function.
func DeepCopy_kubedb_XdbList(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*XdbList)
		out := out.(*XdbList)
		*out = *in
		if in.Items != nil {
			in, out := &in.Items, &out.Items
			*out = make([]*Xdb, len(*in))
			for i := range *in {
				if newVal, err := c.DeepCopy(&(*in)[i]); err != nil {
					return err
				} else {
					(*out)[i] = *newVal.(**Xdb)
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_XdbSpec is an autogenerated deepcopy function.
func DeepCopy_kubedb_XdbSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*XdbSpec)
		out := out.(*XdbSpec)
		*out = *in
		if in.Storage != nil {
			in, out := &in.Storage, &out.Storage
			if newVal, err := c.DeepCopy(*in); err != nil {
				return err
			} else {
				*out = newVal.(*v1.PersistentVolumeClaimSpec)
			}
		}
		if in.DatabaseSecret != nil {
			in, out := &in.DatabaseSecret, &out.DatabaseSecret
			if newVal, err := c.DeepCopy(*in); err != nil {
				return err
			} else {
				*out = newVal.(*v1.SecretVolumeSource)
			}
		}
		if in.NodeSelector != nil {
			in, out := &in.NodeSelector, &out.NodeSelector
			*out = make(map[string]string)
			for key, val := range *in {
				(*out)[key] = val
			}
		}
		if in.Init != nil {
			in, out := &in.Init, &out.Init
			*out = new(InitSpec)
			if err := DeepCopy_kubedb_InitSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if in.BackupSchedule != nil {
			in, out := &in.BackupSchedule, &out.BackupSchedule
			*out = new(BackupScheduleSpec)
			if err := DeepCopy_kubedb_BackupScheduleSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if in.Monitor != nil {
			in, out := &in.Monitor, &out.Monitor
			*out = new(MonitorSpec)
			if err := DeepCopy_kubedb_MonitorSpec(*in, *out, c); err != nil {
				return err
			}
		}
		if newVal, err := c.DeepCopy(&in.Resources); err != nil {
			return err
		} else {
			out.Resources = *newVal.(*v1.ResourceRequirements)
		}
		if in.Affinity != nil {
			in, out := &in.Affinity, &out.Affinity
			if newVal, err := c.DeepCopy(*in); err != nil {
				return err
			} else {
				*out = newVal.(*v1.Affinity)
			}
		}
		if in.Tolerations != nil {
			in, out := &in.Tolerations, &out.Tolerations
			*out = make([]v1.Toleration, len(*in))
			for i := range *in {
				if newVal, err := c.DeepCopy(&(*in)[i]); err != nil {
					return err
				} else {
					(*out)[i] = *newVal.(*v1.Toleration)
				}
			}
		}
		return nil
	}
}

// DeepCopy_kubedb_XdbStatus is an autogenerated deepcopy function.
func DeepCopy_kubedb_XdbStatus(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*XdbStatus)
		out := out.(*XdbStatus)
		*out = *in
		if in.CreationTime != nil {
			in, out := &in.CreationTime, &out.CreationTime
			*out = new(meta_v1.Time)
			**out = (*in).DeepCopy()
		}
		return nil
	}
}
